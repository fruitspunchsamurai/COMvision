/*
Singapore Polytechnic
Singapore Autonomous Underwater Vehicle Challenge 2014
Computer Vision System
Version : PRE ALPHA
*/

//Include Libraries
#include "opencv2/opencv.hpp"

//Declarations
using namespace cv;
int state = 0;
int ballrelease = 0;
int count = 0;

int main(int, char**)
{
    //SETUP
    //Initialise Bottom Camera
    VideoCapture cambottom(0); 
    if(!cambottom.isOpened()) //Checking sequence 
    {
        return -1;
    }
    cambottom.set(CV_CAP_PROP_FRAME_WIDTH, 320);
    cambottom.set(CV_CAP_PROP_FRAME_HEIGHT, 240);
    //Initialise Front Camera
    VideoCapture camfront(1);
    if(!camfront.isOpened()) //Checking sequence
    {
        return -1;
    }
    camfront.set(CV_CAP_PROP_FRAME_WIDTH, 320);
    camfront.set(CV_CAP_PROP_FRAME_HEIGHT, 240);
    
    Mat hsvbottom;
    Mat hsvfront;
    namedWindow("Original Frame (Bottom)",1);
    namedWindow("HSV Frame (Bottom)",1);
    namedWindow("Original Frame (Front)",1);
    namedWindow("HSV Frame (Front)",1);
    for(;;)
    {
        Mat framebottom;
        cambottom >> framebottom; // Get a new frame from camera
        GaussianBlur(framebottom, framebottom, Size(7,7), 1.5, 1.5);
        cvtColor(framebottom, hsvbottom, CV_BGR2HSV);
        inRange(hsvbottom, Scalar(0, 0, 0), Scalar(102, 194, 30),hsvbottom);
        imshow("Original Frame (Bottom)", framebottom);
        imshow("Thresholded Frame (Bottom)", hsvbottom);
        
        Mat framefront;
        camfront >> framefront; // Get a new frame from camera
        GaussianBlur(framefront, framefront, Size(7,7), 1.5, 1.5);
        cvtColor(framefront, hsvfront, CV_BGR2HSV);
        inRange(hsvfront, Scalar(17, 90, 90), Scalar(40, 255, 255),hsvfront);
        imshow("Original Frame (Front)", framefront);
        imshow("Thresholded Frame (Front)", hsvfront);
        if(waitKey(30) >= 0) break;
    }
    // the camera will be deinitialized automatically in VideoCapture destructor
    return 0;
}
